import base64
import mysql.connector
import ftplib
import os
import ast
import re
import time


def get_connection(db_user,db_password,db_host,db_database):
		conn = mysql.connector.connect(user=db_user, password=db_password, host=db_host,database=db_database)
		return conn
	 

def get_datahub_accounts(conn,account_type):
		query='select account_id,password from account where account_type="%s"'%account_type
		cursor = conn.cursor()
		cursor.execute(query)
		account=dict()
		accounts=list()
		for (account_id, password) in cursor:
				 account['account_id']=account_id
				 account['password']=base64.b64decode(password[::-1])
				 accounts.append(account)
				 account=dict()
		return accounts

		

def download_datahub_metadatafile(account):
		account_id=account['account_id']
		password=account['password']
		inputfile=account_id.replace('dcc_','')+"_run_metadata_*.tsv"
		outputfile=account_id.replace("dcc_", "")+'_run_metadata.tsv'
		url="ftp://%s:%s@ftp.dcc-private.ebi.ac.uk/meta/%s/reports/%s"%(account_id,password,account_id,inputfile)
		command="wget -t 2 %s -O %s"%(url,outputfile)
		#print(command)
		os.system(command)
		return outputfile

		
def get_selection_to_attributes_accounts(conn,pipeline_name):
		query='select distinct account_id from process_selection where pipeline_name="%s" and public="NO" and selection_to_info_start is NULL'%pipeline_name
		cursor = conn.cursor()
		cursor.execute(query)
		selections=list()
		for account_id in cursor:
				 selections.append(account_id[0])
		return selections


def log_error(message, message_type,log_file)
     red = '\033[01;31m'
     green = '\033[01;32m'
     if message_type=='error':
     	  sys.stderr.write(red+"world!")
     elif message_type=='warnning':
     	  sys.stdout.write(green+"Hello ")
     elif message_type=='info':
     	  sys.stdout.write(green+"Hello ")
     else:
     	  print "wrong log_file"




if __name__ == '__main__':

	conn=get_connection('selectauser','selectapass','localhost','selectadb')
	accounts=get_datahub_accounts(conn,"datahub")
	selections=get_selection_to_attributes_accounts(conn,"DTU_CGE")
	for account in accounts:
			id=account['account_id']
			if id in selections:
				 download_datahub_metadatafile(account)



